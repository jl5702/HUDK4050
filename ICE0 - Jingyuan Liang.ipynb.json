{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5c308ea3",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello World!\n"
     ]
    }
   ],
   "source": [
    "print (\"Hello World!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "26bd1f10",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 7 10 Whatsup\n"
     ]
    }
   ],
   "source": [
    "# variables\n",
    "x = 3\n",
    "y = 7\n",
    "xy = 'Whatsup'\n",
    "\n",
    "print (x, y, x+y, xy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d1f430f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5\n",
      "5\n",
      "7\n"
     ]
    }
   ],
   "source": [
    "# override variables\n",
    "print (x)\n",
    "x = 5\n",
    "print (x)\n",
    "x = y\n",
    "print (x)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "7264fe7e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1 + 2 =  3\n",
      "2 - 1 =  1\n",
      "1 * 2 =  2\n",
      "9 / 3 =  3.0\n"
     ]
    }
   ],
   "source": [
    "# math operators\n",
    "a = 1 + 2\n",
    "print (\"1 + 2 = \", a)\n",
    "b = 2 - 1\n",
    "print (\"2 - 1 = \", b)\n",
    "c = 1 * 2\n",
    "print (\"1 * 2 = \", c)\n",
    "d = 9 / 3\n",
    "print (\"9 / 3 = \", d)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "48f97252",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m =  1\n",
      "f =  3\n"
     ]
    }
   ],
   "source": [
    "# division\n",
    "m = 10 % 3\n",
    "print (\"m = \", m)\n",
    "f = 10 // 3\n",
    "print (\"f = \", f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8e61aeb5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a =  3 ; m =  1 ; f =  3\n",
      "a is equal to f?  True\n",
      "a is not equal to f? False\n",
      "m is smaller than f?  True\n"
     ]
    }
   ],
   "source": [
    "# boolean operators\n",
    "print (\"a = \", a, \"; m = \", m, \"; f = \", f)\n",
    "print (\"a is equal to f? \", a == f)\n",
    "print (\"a is not equal to f?\", a != f)\n",
    "print (\"m is smaller than f? \", m < f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "527e9840",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'/Users/ljy'"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# working directory\n",
    "import os\n",
    "os.getcwd ( )"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
